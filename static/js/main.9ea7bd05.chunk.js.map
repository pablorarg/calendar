{"version":3,"sources":["reducers/calendarReducer.js","context/CalendarContext.js","components/controls/Button.js","hooks/useCalendar.js","components/calendar/Actions.js","components/calendar/Header.js","reducers/eventsReducer.js","context/EventsContext.js","hooks/useEvents.js","components/events/EventViewer.js","components/events/Event.js","components/events/EventCreator.js","components/calendar/Day.js","components/calendar/WeekHeader.js","components/calendar/Month.js","pages/Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["currentDate","Date","dateCurrentYear","getUTCFullYear","dateCurrentMonthNumber","getUTCMonth","dateCurrentDayNumber","getUTCDate","intlForMonths","Intl","DateTimeFormat","month","months","Array","keys","calendarReducer","state","action","selectedMonth","year","selectedYear","type","info","getCalendarInformation","currentDay","currentMonth","currentYear","map","monthIndex","monthName","format","daysOfMonth","getDate","startsOn","getDay","Context","React","createContext","CalendarContext","children","useReducer","calendar","dispatch","Provider","value","Button","onClick","text","className","useCalendar","useContext","Actions","Header","calendarInfo","title","eventsReducer","date","event","name","surname","id","uuidv4","filter","EventsContext","stored","localStorage","getItem","JSON","parse","events","useEffect","setItem","stringify","useEvents","useState","eventsInMonth","setEventsInMonth","getMonth","EventViewer","handleClose","show","showModal","setShowModal","showHideClassName","e","preventDefault","Event","showEvent","setShowEvent","handleEventViewer","renderEventViewer","charAt","toUpperCase","EventCreator","selectedDay","setName","setSurname","onSubmit","autoFocus","onChange","target","placeholder","Day","dayNumber","isCurrentDate","isFirstOfTheMonth","createEvent","setCreateEvent","styleFirstDayStart","classNameFirstDay","classNameDayNumber","handleEventCreate","renderEventCreator","renderDatedEvents","length","index","style","WeekHeader","weekDays","intlForWeeks","weekday","weekDaysName","dayIndex","Month","days","isCurrentMonth","day","eventsFiltered","getMonthDays","Calendar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ea7bd05.chunk.js","sourcesContent":["\r\nconst currentDate = new Date();\r\n\r\nconst dateCurrentYear = currentDate.getUTCFullYear()\r\nconst dateCurrentMonthNumber = currentDate.getUTCMonth()\r\nconst dateCurrentDayNumber = currentDate.getUTCDate()\r\nconst locale = 'en'\r\nconst intlForMonths = new Intl.DateTimeFormat(locale, { month: 'long' })\r\nconst months = [...Array(12).keys()]\r\n\r\nexport const calendarReducer = (state, action) => {\r\n    let month = state.selectedMonth\r\n    let year = state.selectedYear\r\n\r\n    switch (action.type) {\r\n        case 'INIT':\r\n            return {\r\n                info: getCalendarInformation(dateCurrentYear),\r\n                currentDay: dateCurrentDayNumber,\r\n                currentMonth: dateCurrentMonthNumber,\r\n                currentYear: dateCurrentYear,\r\n                selectedMonth: dateCurrentMonthNumber,\r\n                selectedYear: dateCurrentYear\r\n            }\r\n        case 'NEXT_MONTH':\r\n            if (state.selectedMonth === 11) {\r\n                month = 0\r\n                year = state.selectedYear + 1\r\n            } else {\r\n                month = state.selectedMonth + 1\r\n            }\r\n            return {\r\n                info: getCalendarInformation(year),\r\n                currentDay: dateCurrentDayNumber,\r\n                currentMonth: dateCurrentMonthNumber,\r\n                currentYear: dateCurrentYear,\r\n                selectedMonth: month,\r\n                selectedYear: year\r\n            }\r\n        case 'PREVIOUS_MONTH':\r\n            if (state.selectedMonth === 0) {\r\n                month = 11\r\n                year = state.selectedYear - 1\r\n            } else {\r\n                month = state.selectedMonth - 1\r\n            }\r\n\r\n            return {\r\n                info: getCalendarInformation(year),\r\n                currentDay: dateCurrentDayNumber,\r\n                currentMonth: dateCurrentMonthNumber,\r\n                currentYear: dateCurrentYear,\r\n                selectedMonth: month,\r\n                selectedYear: year\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction getCalendarInformation(year) {\r\n    const calendarInformation = months.map((monthIndex) => {\r\n        const monthName = intlForMonths.format(new Date(dateCurrentYear, monthIndex))\r\n        const nextMonthIndex = (monthIndex + 1) % 12\r\n        const daysOfMonth = new Date(dateCurrentYear, nextMonthIndex, 0).getDate()\r\n        const startsOn = new Date(year, monthIndex, 1).getDay()\r\n\r\n        return {\r\n            daysOfMonth,\r\n            monthName,\r\n            startsOn\r\n        }\r\n    })\r\n\r\n    return calendarInformation\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport { calendarReducer } from 'reducers/calendarReducer'\r\n\r\nconst Context = React.createContext({})\r\n\r\nexport function CalendarContext({ children }) {\r\n\r\n    const [calendar, dispatch] = useReducer(calendarReducer, {\r\n        info: {},\r\n        currentDay: 0,\r\n        currentMonth: 0,\r\n        currentYear: 0,\r\n        selectedMonth: 0,\r\n        selectedYear: 0\r\n    })\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            calendar,\r\n            dispatch\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default Context\r\n","import React from 'react'\r\nimport './Button.css'\r\n\r\nexport default function Button({ onClick, text }) {\r\n\r\n    return (\r\n        <button className='action-button' onClick={onClick}>\r\n            {text}\r\n        </button>\r\n    )\r\n}","import Context from 'context/CalendarContext'\r\nimport { useContext } from 'react'\r\n\r\nexport default function useCalendar() {\r\n    const { calendar, dispatch } = useContext(Context)\r\n\r\n    return { calendar, dispatch }\r\n}\r\n","import Button from 'components/controls/Button'\r\nimport useCalendar from 'hooks/useCalendar'\r\nimport React from 'react'\r\n\r\nexport default function Actions() {\r\n\r\n    const { dispatch } = useCalendar()\r\n\r\n    const handelPreviousMonth = () => {\r\n        dispatch({ type: 'PREVIOUS_MONTH' })\r\n    }\r\n\r\n    const handelToDay = () => {\r\n        dispatch({ type: 'INIT' })\r\n    }\r\n\r\n    const handelNextMonth = () => {\r\n        dispatch({ type: 'NEXT_MONTH' })\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <Button onClick={handelPreviousMonth} text={'◄'} />\r\n            <Button onClick={handelToDay} text={'Today'} />\r\n            <Button onClick={handelNextMonth} text={'►'} />\r\n        </section>\r\n    )\r\n}","import Actions from 'components/calendar/Actions';\r\nimport useCalendar from 'hooks/useCalendar';\r\nimport React from 'react';\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n\r\n    const { calendar } = useCalendar()\r\n    const calendarInfo = calendar.info[calendar.selectedMonth]\r\n    const title = `${calendarInfo ? calendarInfo.monthName : ''} ${calendar.selectedYear}`\r\n\r\n    return (\r\n        <header className=\"header-container\">\r\n            <h1>{title}</h1>\r\n            <Actions />\r\n        </header>\r\n    )\r\n}\r\n","\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const eventsReducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'ADD_EVENT':\r\n            return [...state, {\r\n                date: action.event.date,\r\n                name: action.event.name,\r\n                surname: action.event.surname,\r\n                id: uuidv4()\r\n            }]\r\n        case 'REMOVE_EVENT':\r\n            return state.filter(event => event.id !== action.id)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React, { createContext, useEffect, useReducer } from 'react';\r\nimport { eventsReducer } from 'reducers/eventsReducer';\r\n\r\nconst Context = createContext({})\r\n\r\nexport function EventsContext({ children }) {\r\n\r\n    const [events, dispatch] = useReducer(eventsReducer, [], () => {\r\n        const stored = localStorage.getItem('events');\r\n        return stored ? JSON.parse(stored)\r\n            : []\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('events', JSON.stringify(events))\r\n    }, [events])\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            events,\r\n            dispatch\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default Context\r\n","import Context from 'context/EventsContext'\r\nimport { useContext, useEffect, useState } from 'react'\r\n\r\nexport default function useEvents(selectedMonth) {\r\n    const { events, dispatch } = useContext(Context)\r\n    const [eventsInMonth, setEventsInMonth] = useState([])\r\n\r\n    useEffect(() => {\r\n        setEventsInMonth(events.filter(event => new Date(event.date).getMonth() === selectedMonth))\r\n    }, [events, selectedMonth])\r\n\r\n\r\n    return { dispatch, eventsInMonth }\r\n}","import Button from 'components/controls/Button'\r\nimport useEvents from 'hooks/useEvents'\r\nimport React, { useState } from 'react'\r\nimport './EventViewer.css'\r\n\r\nexport default function EventViewer({ event, handleClose, show }) {\r\n\r\n    const { dispatch } = useEvents()\r\n\r\n    const [showModal, setShowModal] = useState(show)\r\n\r\n    const showHideClassName = showModal ? 'modal display-block' : 'modal display-none'\r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault()\r\n        dispatch({\r\n            type: 'REMOVE_EVENT',\r\n            id: event.id\r\n        })\r\n        setShowModal(false)\r\n    }\r\n\r\n    return (\r\n        <div className={showHideClassName}>\r\n            <form className='modal modal-main'>\r\n                <h4>{event.name}</h4>\r\n                <p>{event.surname}</p>\r\n                <Button\r\n                    onClick={handleDelete}\r\n                    text={'Delete'}\r\n                    type=\"submit\" />\r\n                <Button\r\n                    onClick={handleClose}\r\n                    text={'Close'} />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import EventViewer from 'components/events/EventViewer';\r\nimport React, { useState } from 'react';\r\nimport './EventViewer.css';\r\n\r\nexport default function Event(event) {\r\n\r\n    const [showEvent, setShowEvent] = useState(false)\r\n\r\n    const handleEventViewer = () => {\r\n        setShowEvent(!showEvent)\r\n    }\r\n    const renderEventViewer = showEvent && <EventViewer event={event.event} handleClose={handleEventViewer} show={showEvent} />\r\n\r\n    return (\r\n        <>\r\n            <p className=\"days-events\" onClick={handleEventViewer}>\r\n                {event.event['name'].charAt(0).toUpperCase() + event.event['surname'].charAt(0).toUpperCase()}\r\n            </p>\r\n            {renderEventViewer}\r\n        </>\r\n    )\r\n}","\r\nimport Button from 'components/controls/Button';\r\nimport useCalendar from 'hooks/useCalendar';\r\nimport useEvents from 'hooks/useEvents';\r\nimport React, { useState } from 'react';\r\nimport './EventViewer.css';\r\n\r\nexport default function EventCreator({ selectedDay = 0, handleClose, show }) {\r\n    const { calendar } = useCalendar()\r\n    const { dispatch } = useEvents()\r\n    const [name, setName] = useState(null)\r\n    const [surname, setSurname] = useState(null)\r\n\r\n    const showHideClassName = show ? 'modal display-block' : 'modal display-none'\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        if (name && surname) {\r\n            dispatch({\r\n                type: 'ADD_EVENT',\r\n                event: {\r\n                    date: new Date(calendar.selectedYear,\r\n                        calendar.selectedMonth,\r\n                        selectedDay),\r\n                    name: name,\r\n                    surname: surname\r\n                }\r\n            })\r\n            handleClose()\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setName(event.target.value)\r\n    }\r\n\r\n    const handleSurnameChange = (event) => {\r\n        setSurname(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className={showHideClassName}>\r\n            <section className='modal modal-main'>\r\n                <h4>Create event</h4>\r\n                <form className=\"event-content\" onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <p>Name</p>\r\n                        <input autoFocus=\"autoFocus\" onChange={handleNameChange} placeholder=\"René..\" type=\"text\" ></input>\r\n                    </div>\r\n                    <div>\r\n                        <p>Surname</p>\r\n                        <input type=\"text\" onChange={handleSurnameChange} placeholder=\"Descartes..\"></input>\r\n                    </div>\r\n                    <div>\r\n                        <Button type=\"submit\" text={'Add'} />\r\n                        <Button onClick={handleClose} text={'Maybe later'} />\r\n                    </div>\r\n                </form>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","import Event from 'components/events/Event'\r\nimport EventCreator from 'components/events/EventCreator'\r\nimport React, { useState } from 'react'\r\nimport './Day.css'\r\n\r\nexport default function Day({ dayNumber, events = [], isCurrentDate = false, isFirstOfTheMonth = false, startsOn = 0 }) {\r\n\r\n    const [createEvent, setCreateEvent] = useState(false)\r\n\r\n    const styleFirstDayStart = { \"--first-day-start\": startsOn }\r\n\r\n    const classNameFirstDay = isFirstOfTheMonth ? 'day-item first-day' : 'day-item'\r\n\r\n    const classNameDayNumber = dayNumber && isCurrentDate\r\n        ? \"day-number current-day \"\r\n        : \"day-number\"\r\n\r\n    const handleEventCreate = () => {\r\n        setCreateEvent(!createEvent)\r\n    }\r\n\r\n    const renderEventCreator = createEvent && <EventCreator handleClose={handleEventCreate} selectedDay={dayNumber} show={createEvent} />\r\n\r\n    const renderDatedEvents = events.length > 0\r\n        && events.map((event, index) =>\r\n            <Event key={index} event={event} />\r\n        )\r\n\r\n    return (\r\n        <li className={classNameFirstDay} style={styleFirstDayStart}>\r\n\r\n            <div className=\"header-section hover-to-show-action\" onClick={handleEventCreate}>\r\n                <span className=\"hover-to-show\">+</span>\r\n                <p className={classNameDayNumber} >{dayNumber}</p>\r\n            </div>\r\n            <div className=\"days-events-container\">\r\n                {renderDatedEvents}\r\n            </div>\r\n            {renderEventCreator}\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './WeekHeader.css';\r\n\r\nexport default function WeekHeader() {\r\n    const weekDays = [...Array(7).keys()];\r\n    const locale = 'en-us'\r\n\r\n    const intlForWeeks = new Intl.DateTimeFormat(locale, { weekday: 'short' })\r\n\r\n    const weekDaysName = weekDays.map((dayIndex) =>\r\n        intlForWeeks.format(new Date(2021, 7, dayIndex + 1))\r\n    )\r\n\r\n    const getWeekDays = () => {\r\n        return weekDaysName.map(dayIndex => {\r\n            return <li className=\"weekday\" key={dayIndex}>{dayIndex}</li>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ol className=\"list-days-name\">\r\n            {getWeekDays()}\r\n        </ol>\r\n    )\r\n}\r\n","import Day from 'components/calendar/Day'\r\nimport WeekHeader from 'components/calendar/WeekHeader'\r\nimport useCalendar from 'hooks/useCalendar'\r\nimport useEvents from 'hooks/useEvents'\r\nimport React from 'react'\r\nimport './Month.css'\r\n\r\nexport default function Month({ currentDay }) {\r\n\r\n    const { calendar } = useCalendar()\r\n    const { eventsInMonth } = useEvents(calendar.selectedMonth)\r\n\r\n    if (calendar.currentDay === 0) return <></>\r\n\r\n    const getMonthDays = (month) => {\r\n\r\n        const days = [...Array(calendar.info[month].daysOfMonth).keys()]\r\n        const startsOn = calendar.info[month].startsOn + 1\r\n        const isCurrentMonth = calendar.selectedYear === calendar.currentYear\r\n            && calendar.selectedMonth === calendar.currentMonth\r\n\r\n        return days.map(day => {\r\n            const dayNumber = day + 1;\r\n            const date = new Date(calendar.selectedYear,\r\n                calendar.selectedMonth,\r\n                dayNumber)\r\n\r\n            const eventsFiltered = eventsInMonth.filter(event => new Date(event.date).getDate() === date.getDate())\r\n\r\n            return (\r\n                <Day dayNumber={dayNumber}\r\n                    events={eventsFiltered}\r\n                    isCurrentDate={isCurrentMonth && calendar.currentDay === dayNumber}\r\n                    isFirstOfTheMonth={dayNumber === 1}\r\n                    key={day}\r\n                    startsOn={startsOn}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"month-container\">\r\n            <WeekHeader />\r\n            <ol className=\"list-days\">\r\n                {getMonthDays(calendar.selectedMonth)}\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import Header from 'components/calendar/Header';\r\nimport Month from 'components/calendar/Month';\r\nimport { EventsContext } from 'context/EventsContext';\r\nimport useCalendar from 'hooks/useCalendar';\r\nimport React, { useEffect } from 'react';\r\nimport './Calendar.css';\r\n\r\nexport default function Calendar() {\r\n\r\n    const { dispatch } = useCalendar()\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: 'INIT' })\r\n    }, [])\r\n\r\n    return (\r\n        <section className=\"calendar-container\">\r\n            <Header />\r\n            <EventsContext>\r\n                <Month />\r\n            </EventsContext>\r\n        </section>\r\n    );\r\n}\r\n","import { CalendarContext } from 'context/CalendarContext';\r\nimport Calendar from 'pages/Calendar';\r\nimport React from 'react';\r\n\r\nexport default function App() {\r\n\r\n    return (\r\n        <CalendarContext>\r\n            <Calendar />\r\n        </CalendarContext>\r\n    );\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}